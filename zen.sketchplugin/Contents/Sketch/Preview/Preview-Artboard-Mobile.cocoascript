var onRun = function(context){
  function writeFile(filename, the_string) {
    const path =[@"" stringByAppendingString: filename];
    const str = [@"" stringByAppendingString: the_string];
    str.dataUsingEncoding_(NSUTF8StringEncoding).writeToFile_atomically_(path, true)
  }

  // GLOBAL
  const doc = context.document;
  const previzFolder = "/.previz";
  const path = NSHomeDirectory() + previzFolder;

  // Ordena un array de capas segÃºn su posiciÃ³n horizontal, de menor a mayor.
  // FunciÃ³n para la funciÃ³n sort().
  const sortByHorizontalPosition = (a, b) => a.frame().left() - b.frame().left();

  // Get slice
  const getSlice = artboard => {
    const sliceLayerAncestry = MSImmutableLayerAncestry.ancestryWithMSLayer(artboard);
    const rect = MSSliceTrimming.trimmedRectForLayerAncestry(sliceLayerAncestry);
    const slices = MSExportRequest.exportRequestsFromExportableLayer_inRect_useIDForName(artboard, rect, false);
    return slices[0];
  }

  // Export slice
  const exportSlice = (doc, slice, filename) => {
    doc.saveArtboardOrSlice_toFile(slice, filename + "." + slice.format());
  }

  // Artboards
  const artboards = context.selection.slice().filter(ab => ab.class() == "MSArtboardGroup").sort(sortByHorizontalPosition);

  // Artboard
  artboards.map(function( artboard, idx, array ){
    const artboardHeight = artboard.frame().height();
    const artboardWidth = artboard.frame().width();
    const currentArtboard = artboard;
    const currentArtboardName = currentArtboard.name().replace(/[^a-zA-Z0-9]/g,'')

    // Export
    const exportImageFilePath = path + "/" + currentArtboardName;
    exportSlice( doc, getSlice(currentArtboard), exportImageFilePath );

    log(idx)
    log(array.length)
    if(idx == array.length - 1) {
      next = ""
    } else {
      next = idx + 1;
    }

    // HTML
    const content = `<!DOCTYPE html>
    <html>
    <head>
      <title>Zen Previz - ${currentArtboardName}</title>
      <style>
        * {
          padding:0;
          margin:0;
        }
        .previz-image {
          width: 100%;
          margin:0 auto;
        }
      </style>
    </head>
    <body>
    <div>
      <a href="previz${next}.html">
        <img class="previz-image" src=${currentArtboardName}.${getSlice(currentArtboard).format()}>
      </a>
    </div>
    </body>
    </html>`

    const htmlName = idx == 0 ? "/previz.html" : "/previz" + idx + ".html"

    writeFile(path + htmlName, content);

  }) // End Map

  [doc showMessage: "ðŸ“±  Mobile Previz"];

}

